<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:mvf="clr-namespace:Microsoft.VisualBasic.FileIO;assembly=Microsoft.VisualBasic"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OrchestratorQueueName" Type="InArgument(x:String)" />
    <x:Property Name="io_CC_Mail" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Globalization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Journal Entry Posting Procedure Sequence" sap2010:WorkflowViewState.IdRef="Sequence_26">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="all_Mails_Variable" />
      <Variable x:TypeArguments="x:String" Name="template_Path_Variable" />
      <Variable x:TypeArguments="ui:GenericValue" Name="audit_Log_Path" />
      <Variable x:TypeArguments="x:Int32" Name="System_Retry_Number" />
      <Variable x:TypeArguments="x:String" Name="document_Type" />
      <Variable x:TypeArguments="x:String" Name="doc_header_Text" />
      <Variable x:TypeArguments="x:String" Name="country_Code" />
      <Variable x:TypeArguments="x:String" Name="cc_Emails" />
      <Variable x:TypeArguments="x:String" Name="sender_Email" />
      <Variable x:TypeArguments="ui:Image" Name="error_screenshot" />
      <Variable x:TypeArguments="x:String" Name="Gl_Email_Variable" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Process_Start_Time" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Process_Date" />
      <Variable x:TypeArguments="s:DateTime" Name="Process_Start_Time_1" />
      <Variable x:TypeArguments="ui:GenericValue" Name="JV_Document_Number" />
      <Variable x:TypeArguments="ui:QueueItem" Name="transaction_Queue_Item_Mails_Data" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="filtered_Mails" />
      <Variable x:TypeArguments="ui:GenericValue" Name="audit_Path_Status" />
      <Variable x:TypeArguments="x:String" Name="zip_File_Size" />
      <Variable x:TypeArguments="x:Int64" Name="mail_Size" />
      <Variable x:TypeArguments="ui:GenericValue" Name="mail_Size_in_KB" />
    </Sequence.Variables>
    <TryCatch DisplayName="Main Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_14">
      <TryCatch.Try>
        <StateMachine sap2010:Annotation.AnnotationText="Automation of JV Template from shared mailbox and creating batch input in SAP." DisplayName="Journal Entry Posting Procedure Process" sap2010:WorkflowViewState.IdRef="StateMachine_1">
          <StateMachine.InitialState>
            <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Read JEPP Config, Init SAP Application" DisplayName="Init" sap2010:WorkflowViewState.IdRef="State_2">
              <State.Entry>
                <TryCatch sap2010:Annotation.AnnotationText="Read JEPP Config, Init SAP Application" DisplayName="Handle Catch intialization exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <TryCatch.Try>
                    <Sequence sap2010:Annotation.AnnotationText="Read JEPP Config, Init SAP Application" DisplayName="Init State" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Trace" Message="[&quot;Entered Initialization State&quot;]" />
                      <Assign DisplayName="Initialize SystemError" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If sap2010:Annotation.AnnotationText="If first run - read Config file" Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap2010:WorkflowViewState.IdRef="If_1">
                        <If.Then>
                          <Sequence DisplayName="First Run" sap2010:WorkflowViewState.IdRef="Sequence_17">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:GenericValue" Name="config_File_Path" />
                            </Sequence.Variables>
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[&quot;Invoking InitAllSettings Workflow&quot;]" />
                            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Config_File_Path" DisplayName="Get Asset - Config File Path" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                              <ui:GetRobotAsset.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[config_File_Path]</OutArgument>
                              </ui:GetRobotAsset.Value>
                            </ui:GetRobotAsset>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[config_File_Path]</InArgument>
                                <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Invoke InitAllSettings Workflow completed&quot;]" />
                            <Sequence sap2010:Annotation.AnnotationText="Save job arguments with values to Config, using the argument's name as keyname. " DisplayName="Save job arguments Config" sap2010:WorkflowViewState.IdRef="Sequence_22">
                              <If Condition="[Not string.IsNullOrEmpty(OrchestratorQueueName)]" DisplayName="OrchestratorQueueName" sap2010:WorkflowViewState.IdRef="If_9">
                                <If.Then>
                                  <Assign DisplayName="Add OrchestratorQueueName" sap2010:WorkflowViewState.IdRef="Assign_19">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueName")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[OrchestratorQueueName]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="// If the argument has no value, do not overwrite config. This provides backward compatibility with &lt; 2018.3 and allows default values to come from the Config.xlsx" />
                                </If.Else>
                              </If>
                            </Sequence>
                            <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Log Fields" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                              <ui:AddLogFields.Fields>
                                <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                              </ui:AddLogFields.Fields>
                            </ui:AddLogFields>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_4" Text="// Config is no nothing" />
                        </If.Else>
                      </If>
                      <Assign DisplayName="Assign - Audit Log Path" sap2010:WorkflowViewState.IdRef="Assign_136">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:GenericValue">[audit_Log_Path]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:GenericValue">[Config("jv_Processing_Tracker").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="[&quot;Invoking KillAllProcesses workflow&quot;]" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses Wsorkflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Invoke KillAllProcesses workflow completed&quot;]" />
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info" Message="[&quot;Invoking InitAllApplications workflow&quot;]" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Disable protection mode Workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Framework\Disable protection mode.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Info" Message="[&quot;Invoke InitAllApplications workflow completed&quot;]" />
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_76">
                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_84" Level="Info" Message="[exception]" />
                          <Assign DisplayName="Assign excepton to SystemError" sap2010:WorkflowViewState.IdRef="Assign_14">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <State.Transitions>
                <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_2">
                  <Transition.To>
                    <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Get next transaction input data" DisplayName="Get Transaction Data" sap2010:WorkflowViewState.IdRef="State_4">
                      <State.Entry>
                        <Sequence sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Retrieve Data" sap2010:WorkflowViewState.IdRef="Sequence_1">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
                          </Sequence.Variables>
                          <Assign DisplayName="Assign - Retry number" sap2010:WorkflowViewState.IdRef="Assign_57">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[System_Retry_Number]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info" Message="[&quot;Entered Get Transaction Data state&quot;]" />
                          <ui:ShouldStop DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[ShouldStop]" />
                          <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap2010:WorkflowViewState.IdRef="If_8">
                            <If.Then>
                              <Sequence DisplayName="Orchestrator stop requested" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <ui:LogMessage DisplayName="Log Stop message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                                <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_15">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="snm:MailMessage">[TransactionItem]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="snm:MailMessage">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <TryCatch DisplayName="Try GetTransactionData" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                <TryCatch.Try>
                                  <Sequence DisplayName="Read Emails Sequence" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                    <Assign DisplayName="Assign - Process start Date" sap2010:WorkflowViewState.IdRef="Assign_126">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[Process_Date]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:GenericValue">[datetime.Now.ToString("dd/MM/yyyy")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign - Process start time" sap2010:WorkflowViewState.IdRef="Assign_127">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[Process_Start_Time]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:GenericValue">[datetime.Now.ToString("HH:mm:ss")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign - Process start time" sap2010:WorkflowViewState.IdRef="Assign_128">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:DateTime">[Process_Start_Time_1]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Info" Message="[&quot;Invoking GetTransactionData workflow&quot;]" />
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <OutArgument x:TypeArguments="snm:MailMessage" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InOutArgument>
                                        <InArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="in_All_Mails">[all_Mails_Variable]</InArgument>
                                        <InOutArgument x:TypeArguments="ui:GenericValue" x:Key="io_mail_Item_not_Found">[Mail_Not_Found]</InOutArgument>
                                        <InOutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="io_Filterd_Mails">[filtered_Mails]</InOutArgument>
                                        <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_Mails_data">[transaction_Queue_Item_Mails_Data]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Info" Message="[&quot;Invoke GetTransactionData workflow completetd&quot;]" />
                                  </Sequence>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Log exception message and End process" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                        <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_16">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="snm:MailMessage">[TransactionItem]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="snm:MailMessage">[Nothing]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </If.Else>
                          </If>
                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Info" Message="[&quot;Exiting Get Transaction Data state&quot;]" />
                        </Sequence>
                      </State.Entry>
                      <State.Transitions>
                        <Transition DisplayName="New Transaction" sap2010:WorkflowViewState.IdRef="Transition_6">
                          <Transition.To>
                            <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="This state :&#xA;Saves JV templates from request mails in shared drive&#xA;Validate 4-eye principle &#xA;Validate Template data&#xA;Run macros and save template in .xls format&#xA;Upload .xls to SAP &#xA;Create and execute batch in SAP&#xA;Notify requestor on completion&#xA;Move mails to Archive\company code folder in shared mailbox on successful completion&#xA;Move attachments,mails to Company code\success folder in shared drive&#xA;Move mails to JV Fail\company code folder in shared mail box in case of any exception&#xA;Move attachments,mails to Company code\Error Log in shared drive" DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="State_3">
                              <State.Entry>
                                <Sequence DisplayName="Process Transaction Sequence" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                  <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                    <TryCatch.Variables>
                                      <Variable x:TypeArguments="x:String" Name="cc_code" />
                                    </TryCatch.Variables>
                                    <TryCatch.Try>
                                      <Sequence DisplayName="Process the current TransactionItem" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="xls_Filepath" />
                                          <Variable x:TypeArguments="x:String" Name="success_Path" />
                                          <Variable x:TypeArguments="x:String" Name="session_Name" />
                                          <Variable x:TypeArguments="sd:DataTable" Name="dtFilteredEnteriesPK" />
                                        </Sequence.Variables>
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Info" Message="[&quot;Entered Process Transaction state&quot;]" />
                                        <Sequence DisplayName="Assigning null Sequence" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                          <Assign DisplayName="Assign - Busineess rule exception" sap2010:WorkflowViewState.IdRef="Assign_99">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - System exception" sap2010:WorkflowViewState.IdRef="Assign_100">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Document number" sap2010:WorkflowViewState.IdRef="Assign_95">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[JV_Document_Number]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign- Company Code" sap2010:WorkflowViewState.IdRef="Assign_70">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[company_Code]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign Doc header" sap2010:WorkflowViewState.IdRef="Assign_71">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[doc_header_Text]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Doc Date" sap2010:WorkflowViewState.IdRef="Assign_72">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[document_Date]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Doc Type" sap2010:WorkflowViewState.IdRef="Assign_73">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[document_Type]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Sender Email" sap2010:WorkflowViewState.IdRef="Assign_74">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[sender_Email]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - CC Emails" sap2010:WorkflowViewState.IdRef="Assign_75">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[cc_Emails]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Currency Key" sap2010:WorkflowViewState.IdRef="Assign_76">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[currency_Key]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Country Code" sap2010:WorkflowViewState.IdRef="Assign_77">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[country_Code]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Country Code" sap2010:WorkflowViewState.IdRef="Assign_195">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[zip_File_Size]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - Country Code" sap2010:WorkflowViewState.IdRef="Assign_196">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[jv_Size]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="ui:GenericValue">[""]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:Delete ContinueOnError="True" DisplayName="Delete- Saved Mails Folder" sap2010:WorkflowViewState.IdRef="Delete_6" Path="[Config(&quot;shared_Folder_Path_For_Attachments&quot;).ToString+transaction_Queue_Item_Mails_Data.SpecificContent(&quot;mail_Folder_Count&quot;).ToString+&quot;\&quot;]" />
                                        </Sequence>
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_86" Level="Info" Message="[&quot;Invoking Process authorization workflow&quot;]" />
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke 4-eye principle workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\Process\Process_Authorization.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InOutArgument x:TypeArguments="snm:MailMessage" x:Key="in_TransactionItem">[TransactionItem]</InOutArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Template_Path">[template_Path_Variable]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Gl_Email">[Gl_Email_Variable]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Windows_Name">[windows_Name]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Function_Name">[function_Name]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Company_Code">[cc_code]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Audit_Log_Path">[audit_Log_Path]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Country_Code">[country_Code]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Sap_Document_Date">[sap_Document_Date]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Document_Date">[document_Date]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Sender_Email">[sender_Email]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_CC_Email">[cc_Emails]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_To_Address">[to_Address]</OutArgument>
                                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_Transaction_Queue_Item_Mails_Data">[transaction_Queue_Item_Mails_Data]</InArgument>
                                            <OutArgument x:TypeArguments="ui:GenericValue" x:Key="out_JV_Size">[jv_Size]</OutArgument>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DtFilteredEnteries">[dtFilteredEnteriesPK]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="Info" Message="[&quot;Invoke Process authorization workflow completed&quot;]" />
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Info" Message="[&quot;Invoking Process validation workflow&quot;]" />
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke JV Template validation workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\Process\Process_Validation.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Template_Path">[template_Path_Variable]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Gl_Email">[Gl_Email_Variable]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Company_Code">[company_Code]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Currency_Key">[currency_Key]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Document_Date">[document_Date]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Number_Of_Records">[number_Of_Records]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Document_Type">[document_Type]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Audit_Log_Path">[audit_Log_Path]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Country_Code">[country_Code]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Sap_Document_Date">[sap_Document_Date]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Sender_Email">[sender_Email]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CC_Email">[cc_Emails]</InArgument>
                                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_Transaction_Queue_Item_Mails_Data">[transaction_Queue_Item_Mails_Data]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Document_Date">[document_Date]</InArgument>
                                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtFilteredEnteries">[dtFilteredEnteriesPK]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Info" Message="[&quot;Invoke process validation worflow completed&quot;]" />
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Info" Message="[&quot;Invoking run maco worflow&quot;]" />
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Run Macro workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework\Process\Process Run Macro.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Template_Path">[template_Path_Variable]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                            <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Transaction_Item">[TransactionItem]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_DocumentDate">[document_Date]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_DocumentType">[document_Type]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Currency">[currency_Key]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CompanyCode">[company_Code]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Gl_Email">[Gl_Email_Variable]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Xlspath">[xls_Filepath]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Audit_Log_Path">[audit_Log_Path]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Country_Code">[country_Code]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Sender_Email">[sender_Email]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CC_Email">[cc_Emails]</InArgument>
                                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_Transaction_Queue_Item_Mails_Data">[transaction_Queue_Item_Mails_Data]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_50" Level="Info" Message="[&quot;Invoke run macro workflow completed&quot;]" />
                                        <TryCatch DisplayName="Document number generation Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                          <TryCatch.Try>
                                            <Sequence DisplayName="Document number generation Sequence" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:Int32" Name="time_of_Delay" />
                                                <Variable x:TypeArguments="ui:GenericValue" Name="Sap_Ended" />
                                              </Sequence.Variables>
                                              <Assign DisplayName="Assign - Document number" sap2010:WorkflowViewState.IdRef="Assign_133">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[JV_Document_Number]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">["NA"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="Info" Message="[&quot;Invoking SAP-batch input creation worflow&quot;]" />
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_154">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Sap_Ended]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[0]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Parallel DisplayName="Parallel- SAP processing" sap2010:WorkflowViewState.IdRef="Parallel_3">
                                                <Sequence DisplayName="SAP Sequence" sap2010:WorkflowViewState.IdRef="Sequence_100">
                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SAP-Batch Creation workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework\Process\SAP_Process.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                      <InOutArgument x:TypeArguments="snm:MailMessage" x:Key="io_Mail_Message">[TransactionItem]</InOutArgument>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="in_Document_Type">[document_Type]</InOutArgument>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="in_Document_Date">[document_Date]</InOutArgument>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="in_Currency_Key">[currency_Key]</InOutArgument>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="in_User_function">[function_Name]</InOutArgument>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="in_Company_Code">[company_Code]</InOutArgument>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="io_CC_mail_Address">[io_CC_Mail]</InOutArgument>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="in_File_Path">[xls_Filepath]</InOutArgument>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="in_Windows_Name">[windows_Name]</InOutArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Gl_Email">[Gl_Email_Variable]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Template_Path">[template_Path_Variable]</InArgument>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="out_Doc_Header">[doc_header_Text]</InOutArgument>
                                                      <OutArgument x:TypeArguments="x:String" x:Key="out_Session_Name">[session_Name]</OutArgument>
                                                      <OutArgument x:TypeArguments="x:String" x:Key="out_Number_of_Records">[number_Of_Records]</OutArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Audit_Log_Path">[audit_Log_Path]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Country_Code">[country_Code]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Sap_Document_Date">[sap_Document_Date]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Sender_Email">[sender_Email]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CC_Email">[cc_Emails]</InArgument>
                                                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_Transaction_Queue_Item_Mails_Data">[transaction_Queue_Item_Mails_Data]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_52" Level="Info" Message="[&quot;Invoke SAP-batch creation workflow completed&quot;]" />
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_53" Level="Info" Message="[&quot;Invoking SAP-batch processing workflow&quot;]" />
                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke  SAP-batch processing workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Framework\Process\Process_Batch.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                      <InArgument x:TypeArguments="ui:GenericValue" x:Key="session_Name">[session_Name]</InArgument>
                                                      <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Mail_Message">[TransactionItem]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Gl_Email">[Gl_Email_Variable]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Company_Code">[company_Code]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Template_Path">[template_Path_Variable]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Document_Type">[document_Type]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Document_Date">[document_Date]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Currency_Key">[currency_Key]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Doc_Header">[doc_header_Text]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Audit_Log_Path">[audit_Log_Path]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Country_Code">[country_Code]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Sender_Email">[sender_Email]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CC_Email">[cc_Emails]</InArgument>
                                                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_Transaction_Queue_Item_Mails_Data">[transaction_Queue_Item_Mails_Data]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_54" Level="Info" Message="[&quot;Invoke SAP-batch processing workflow completed&quot;]" />
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_55" Level="Info" Message="[&quot;Invoking document overview workflow&quot;]" />
                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke  Document Overview workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Framework\Process\Document_Overview.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                      <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Mail_Message">[TransactionItem]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Gl_Email">[Gl_Email_Variable]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Company_Code">[company_Code]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Template_Path">[template_Path_Variable]</InArgument>
                                                      <OutArgument x:TypeArguments="x:String" x:Key="out_Success_Path">[success_Path]</OutArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Document_Type">[document_Type]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Document_Date">[document_Date]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Currency_Key">[currency_Key]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Doc_Header">[doc_header_Text]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Number_Of_Records">[number_Of_Records]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Audit_Log_Path">[audit_Log_Path]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Country_Code">[country_Code]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Sender_Email">[sender_Email]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CC_Email">[cc_Emails]</InArgument>
                                                      <InOutArgument x:TypeArguments="ui:GenericValue" x:Key="io_document_Number">[JV_Document_Number]</InOutArgument>
                                                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_Transaction_Queue_Item_Mails_Data">[transaction_Queue_Item_Mails_Data]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_56" Level="Info" Message="[&quot;Invoke document overview workflow completed&quot;]" />
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_155">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[Sap_Ended]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[1]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                                <Sequence DisplayName="Wait 15 min Sequence" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                                  <Delay DisplayName="Delay 5 sec" Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_11" />
                                                  <Assign DisplayName="Time of delay increment value-Assign" sap2010:WorkflowViewState.IdRef="Assign_153">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[time_of_Delay]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <While DisplayName="Wait 15 min -While" sap2010:WorkflowViewState.IdRef="While_7" Condition="[Sap_Ended=0]">
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_102">
                                                      <Delay Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_12" />
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_156">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Int32">[time_of_Delay]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Int32">[time_of_Delay+1]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <If Condition="[time_of_Delay&gt;=180]" DisplayName="time is equal to 15 min -If" sap2010:WorkflowViewState.IdRef="If_26">
                                                        <If.Then>
                                                          <Throw Exception="[new exception(&quot;SAP has been hanged&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
                                                        </If.Then>
                                                      </If>
                                                    </Sequence>
                                                  </While>
                                                </Sequence>
                                              </Parallel>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_57" Level="Info" Message="[&quot;Invoking send mail to requestor workflow&quot;]" />
                                              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_26">
                                                <TryCatch.Try>
                                                  <Sequence DisplayName="Send Mail and Update Audit Log Sequence" sap2010:WorkflowViewState.IdRef="Sequence_106">
                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Send Mail and archive mails workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Framework\Process\SendMailand_MoveToArchiveFolder.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="in_Company_Code">[company_Code]</InOutArgument>
                                                        <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Mail_Message">[TransactionItem]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Template_Path">[template_Path_Variable]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Success_Path">[success_Path]</InArgument>
                                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_CC_Mail">[io_CC_Mail]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Audit_Log_Path">[audit_Log_Path]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Sender_Email">[sender_Email]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_CC_Email">[io_CC_Mail]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_To_Address">[to_Address]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Gl_Mapping">[Gl_Email_Variable]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Document_Date">[sap_Document_Date]</InArgument>
                                                        <InOutArgument x:TypeArguments="ui:GenericValue" x:Key="io_document_Number">[JV_Document_Number]</InOutArgument>
                                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_Transaction_Queue_Item_Mails_Data">[transaction_Queue_Item_Mails_Data]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Document_Type">[document_Type]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Currency_Key">[currency_Key]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Doc_Header">[doc_header_Text]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Country_Code">[country_Code]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_Document_Date_1">[document_Date]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="In_XLS_File_Path">[xls_Filepath]</InArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Zip_Size">[zip_File_Size]</OutArgument>
                                                        <OutArgument x:TypeArguments="x:Int64" x:Key="out_Mail_Size">[mail_Size]</OutArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_94">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="sd:DataTable" Name="jv_Processing_Tracker" />
                                                        <Variable x:TypeArguments="ui:GenericValue" Name="tracker_Count" />
                                                        <Variable x:TypeArguments="s:DateTime" Name="process_End_Time" />
                                                      </Sequence.Variables>
                                                      <ui:ReadRange AddHeaders="True" DataTable="[jv_Processing_Tracker]" DisplayName="Read Audit Log" sap2010:WorkflowViewState.IdRef="ReadRange_8" SheetName="Processing_Log" WorkbookPath="[audit_Log_Path]">
                                                        <ui:ReadRange.Range>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                          </InArgument>
                                                        </ui:ReadRange.Range>
                                                      </ui:ReadRange>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_129">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[tracker_Count]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="ui:GenericValue">[jv_Processing_Tracker.Rows.Count +1]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:WriteCell Cell="[&quot;N&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_48" SheetName="Processing_Log" Text="[TransactionItem.Subject]" WorkbookPath="[audit_Log_Path]" />
                                                      <ui:WriteCell Cell="[&quot;P&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_43" SheetName="Processing_Log" Text="[Process_Date]" WorkbookPath="[audit_Log_Path]" />
                                                      <ui:WriteCell Cell="[&quot;Q&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_44" SheetName="Processing_Log" Text="[Process_Start_Time.ToString]" WorkbookPath="[audit_Log_Path]" />
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_130">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="s:DateTime">[process_End_Time]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:WriteCell Cell="[&quot;R&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_45" SheetName="Processing_Log" Text="[datetime.Now.ToString(&quot;HH:mm:ss&quot;)]" WorkbookPath="[audit_Log_Path]" />
                                                      <ui:WriteCell Cell="[&quot;S&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_47" SheetName="Processing_Log" Text="[((process_End_Time.Subtract(Process_Start_Time_1)).ToString(&quot;hh\:mm\:ss&quot;)).ToString]" WorkbookPath="[audit_Log_Path]" />
                                                      <ui:WriteCell Cell="[&quot;T&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_70" SheetName="Processing_Log" Text="[Config(&quot;Bot_Name&quot;).ToString]" WorkbookPath="[audit_Log_Path]" />
                                                      <ui:WriteCell Cell="[&quot;U&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_71" SheetName="Processing_Log" Text="[jv_Size]" WorkbookPath="[audit_Log_Path]" />
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_198">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[mail_Size_in_KB]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="ui:GenericValue">[(convert.ToInt64(Convert.ToDouble(mail_Size) / 1024)).ToString]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:WriteCell Cell="[&quot;V&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_72" SheetName="Processing_Log" Text="[mail_Size_in_KB]" WorkbookPath="[audit_Log_Path]" />
                                                      <ui:WriteCell Cell="[&quot;W&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_73" SheetName="Processing_Log" Text="[zip_File_Size]" WorkbookPath="[audit_Log_Path]" />
                                                    </Sequence>
                                                  </Sequence>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_29">
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_107">
                                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_101" Level="Info" Message="[exception]" />
                                                        <Throw Exception="[new exception(&quot;after sap exception thrown&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_4" />
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                            </Sequence>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Exception Sequence" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="exception_Message" />
                                                  </Sequence.Variables>
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_82" Level="Info" Message="[&quot;Post Document number generation error occured&quot;]" />
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_98" Level="Info" Message="[exception.Message]" />
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_78">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[System_Retry_Number]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_79">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take Screenshot" sap2010:WorkflowViewState.IdRef="TakeScreenshot_6" Screenshot="[error_screenshot]">
                                                    <ui:TakeScreenshot.Target>
                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                    </ui:TakeScreenshot.Target>
                                                  </ui:TakeScreenshot>
                                                  <ui:SaveImage DisplayName="Save Image" FileName="[Config(&quot;shared_Folder_Path_For_Attachments&quot;).ToString+transaction_Queue_Item_Mails_Data.SpecificContent(&quot;mail_Folder_Count&quot;).ToString+&quot;\&quot;+Config(&quot;error_Screenshot_Name&quot;).ToString]" sap2010:WorkflowViewState.IdRef="SaveImage_6" Image="[error_screenshot]" />
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_159">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[exception_Message]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[exception.Message.ToLower]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <TryCatch DisplayName="Try Catch - Error due to excel" sap2010:WorkflowViewState.IdRef="TryCatch_30">
                                                    <TryCatch.Try>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_110">
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_188">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[exception_Message]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[exception_Message.Replace(".","")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <If Condition="[exception_Message.Contains(&quot;verify that the file has not been corrupted and that the file extension matches the format of the file&quot;)]" DisplayName="If - Error due to excel" sap2010:WorkflowViewState.IdRef="If_27">
                                                          <If.Then>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_182">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[exception_Message]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">["verify that the file has not been corrupted and that the file extension matches the format of the file"]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </If.Then>
                                                        </If>
                                                      </Sequence>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_33">
                                                        <ActivityAction x:TypeArguments="s:Exception">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_186">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="ui:GenericValue">[exception_Message]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="ui:GenericValue">["Default"]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                  <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[exception_Message]" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                                                    <Switch.Default>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_80">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="ui:GenericValue">["Error occurred while processing this JV request in SAP. Please verify manually in SAP whether bot has done the posting or not and re-send the JV request email to bot(If needed)"]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Switch.Default>
                                                    <Assign x:Key="length cannot be less than zero" sap2010:WorkflowViewState.IdRef="Assign_160">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">["The mail address format of approver/Backup approver is not in the right format."]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign x:Key="input string was not in a correct format" sap2010:WorkflowViewState.IdRef="Assign_161">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">["Error occurred while processing this JV request in SAP. Please verify manually in SAP whether bot has done the posting or not and re-send the JV request email to bot(If needed)"]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign x:Key="after sap exception thrown" sap2010:WorkflowViewState.IdRef="Assign_175">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">["Unexpected system error occured after document number was generated."]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign x:Key="verify that the file has not been corrupted and that the file extension matches the format of the file" sap2010:WorkflowViewState.IdRef="Assign_183">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">["Excel file is corrupted. Please put data into new blank JV template and resend request."]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign x:Key="cannot find the ui element corresponding to this selector" sap2010:WorkflowViewState.IdRef="Assign_189">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">["JV was not processed due to an unexpected system error. Please check JV failed folder for more details. In case of further problems please contact Bruce SMEs."]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign x:Key="object reference not set to an instance of an object" sap2010:WorkflowViewState.IdRef="Assign_190">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">["JV was not processed due to an unexpected system error. Please check JV failed folder for more details. In case of further problems please contact Bruce SMEs."]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Switch>
                                                </Sequence>
                                              </ActivityAction>
                                            </Catch>
                                            <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                                              <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                                </ActivityAction.Argument>
                                                <Throw Exception="[new businessruleexception(exception.message)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_58" Level="Info" Message="[&quot;Invoke send mail to requestor workflow completed&quot;]" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                        <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                          </ActivityAction.Argument>
                                          <TryCatch DisplayName="Business exception Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_20">
                                            <TryCatch.Try>
                                              <Sequence DisplayName="Business rule exception of Process Transaction Sequence" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="list_of_sent_mails" />
                                                  <Variable x:TypeArguments="snm:MailMessage" Name="sent_Mail" />
                                                  <Variable x:TypeArguments="ui:GenericValue" Name="fail_Folder_Name" />
                                                  <Variable x:TypeArguments="ui:GenericValue" Name="mail_sent" />
                                                </Sequence.Variables>
                                                <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_101">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_87" Level="Info" Message="[&quot;Comapny Code&quot;+exception.Message]" />
                                                <Assign DisplayName="Assign fail folder name" sap2010:WorkflowViewState.IdRef="Assign_102">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:GenericValue">[fail_Folder_Name]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:GenericValue">["JV Fail\"+exception.Message]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_166">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[company_Code]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:MoveOutlookMessage Account="[Config(&quot;Account_Name&quot;).ToString]" DisplayName="Move Outlook Mail Message" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_7" MailFolder="[fail_Folder_Name]" MailMessage="[TransactionItem]" />
                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_88" Level="Info" Message="[&quot;Requestor email moved to JV Fail folder&quot;]" />
                                                <Delay Duration="00:00:10" sap2010:WorkflowViewState.IdRef="Delay_7" />
                                                <TryCatch DisplayName="Move mailTry Catch" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                                                  <TryCatch.Try>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_83">
                                                      <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_7" MailFolder="Sent Items" MarkAsRead="False" Messages="[list_of_sent_mails]" OnlyUnreadMessages="False" Top="1" />
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_103">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[sent_Mail_Count]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="ui:GenericValue">[0]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <If Condition="[list_of_sent_mails.Count=0]" sap2010:WorkflowViewState.IdRef="If_21">
                                                        <If.Then>
                                                          <While sap2010:WorkflowViewState.IdRef="While_5" Condition="[sent_Mail_Count&lt;=6 and list_of_sent_mails.Count=0]">
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_78">
                                                              <Delay Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_8" />
                                                              <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_8" MailFolder="Sent Items" MarkAsRead="False" Messages="[list_of_sent_mails]" OnlyUnreadMessages="False" Top="1" />
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_104">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[sent_Mail_Count]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="ui:GenericValue">[sent_Mail_Count+1]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </While>
                                                        </If.Then>
                                                      </If>
                                                      <If Condition="[sent_Mail_Count=7]" sap2010:WorkflowViewState.IdRef="If_24">
                                                        <If.Then>
                                                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_89" Level="Info" Message="[&quot;No mails in sent items&quot;]" />
                                                        </If.Then>
                                                        <If.Else>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_82">
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_105">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="snm:MailMessage">[sent_Mail]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="snm:MailMessage">[list_of_sent_mails(0)]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_106">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[mail_sent]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[1]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <While sap2010:WorkflowViewState.IdRef="While_6" Condition="[mail_sent&lt;=7]">
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_81">
                                                                <If Condition="[sent_Mail.Subject.Contains(TransactionItem.Subject)]" sap2010:WorkflowViewState.IdRef="If_22">
                                                                  <If.Then>
                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_79">
                                                                      <ui:MoveOutlookMessage Account="[Config(&quot;Account_Name&quot;).ToString]" DisplayName="Move Outlook Mail Message" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_8" MailFolder="[fail_Folder_Name]" MailMessage="[sent_Mail]" />
                                                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_90" Level="Info" Message="[&quot;Sent mail moved to JV Fail folder&quot;]" />
                                                                      <ui:SaveMail DisplayName="Save Mail Message" FilePath="[Config(&quot;shared_Folder_Path_For_Attachments&quot;).ToString+transaction_Queue_Item_Mails_Data.SpecificContent(&quot;mail_Folder_Count&quot;).ToString+&quot;\&quot;+&quot;SentMail.eml&quot;]" sap2010:WorkflowViewState.IdRef="SaveMail_6" MailMessage="[sent_Mail]" />
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_107">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="ui:GenericValue">[mail_sent]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="ui:GenericValue">[8]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_80">
                                                                      <Delay Duration="00:00:10" sap2010:WorkflowViewState.IdRef="Delay_9" />
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_108">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="ui:GenericValue">[mail_sent]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="ui:GenericValue">[mail_sent+1]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_9" MailFolder="Sent Items" MarkAsRead="False" Messages="[list_of_sent_mails]" OnlyUnreadMessages="False" Top="1" />
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_109">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="snm:MailMessage">[sent_Mail]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="snm:MailMessage">[list_of_sent_mails(0)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                                <If Condition="[mail_sent=7]" sap2010:WorkflowViewState.IdRef="If_23">
                                                                  <If.Then>
                                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_91" Level="Info" Message="[&quot;Sent mail not found in sent items&quot;]" />
                                                                  </If.Then>
                                                                </If>
                                                              </Sequence>
                                                            </While>
                                                          </Sequence>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </TryCatch.Try>
                                                  <TryCatch.Catches>
                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                        </ActivityAction.Argument>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_84">
                                                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_92" Level="Info" Message="[&quot;Outlook not responding&quot;]" />
                                                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_93" Level="Info" Message="[exception]" />
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </Catch>
                                                  </TryCatch.Catches>
                                                </TryCatch>
                                                <Sequence DisplayName="move folder to shared drive" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="folder_Path" />
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="new_Path" />
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="shared_DrivePath" />
                                                    <Variable x:TypeArguments="x:String" Name="year" />
                                                    <Variable x:TypeArguments="x:String" Name="month" />
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="shared_Path" />
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="mail_Subject" />
                                                    <Variable x:TypeArguments="sd:DataTable" Name="jv_Processing_Tracker" />
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="tracker_Count" />
                                                    <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="attachments" />
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="posting_Date" />
                                                  </Sequence.Variables>
                                                  <ui:SaveMail DisplayName="Save Mail Message" FilePath="[Config(&quot;shared_Folder_Path_For_Attachments&quot;).ToString+transaction_Queue_Item_Mails_Data.SpecificContent(&quot;mail_Folder_Count&quot;).ToString+&quot;\&quot;+&quot;Mail.eml&quot;]" sap2010:WorkflowViewState.IdRef="SaveMail_7" MailMessage="[TransactionItem]" />
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_209">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int64">[mail_Size]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int64">[new fileinfo(Config("shared_Folder_Path_For_Attachments").ToString+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString+"\"+"Mail.eml").Length]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_110">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[folder_Path]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[Config("shared_Folder_Path_For_Attachments").ToString+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString+"\"]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_111">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[System.Text.RegularExpressions.Regex.Replace(TransactionItem.Subject,“[^a-zA-Z0-9]”, “”)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_112">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[new_Path]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[folder_Path.Replace("Mails_"+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString,mail_Subject+"-"+datetime.Now.ToString("dd_MM_yyyy-HH_mm_ss"))]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_27">
                                                    <TryCatch.Try>
                                                      <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Move" TargetType="si:Directory">
                                                        <InArgument x:TypeArguments="x:String">[folder_Path]</InArgument>
                                                        <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                      </InvokeMethod>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_30">
                                                        <ActivityAction x:TypeArguments="s:Exception">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_108">
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_176">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[System.Text.RegularExpressions.Regex.Replace(TransactionItem.Subject,“[^a-zA-Z0-9]”, “”)]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_177">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[mail_Subject.Substring(0,20)]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_178">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[new_Path]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[folder_Path.Replace("Mails_"+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString,mail_Subject+"-"+datetime.Now.ToString("dd_MM_yyyy-HH_mm_ss"))]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" MethodName="Move" TargetType="si:Directory">
                                                              <InArgument x:TypeArguments="x:String">[folder_Path]</InArgument>
                                                              <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                            </InvokeMethod>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_94" Level="Info" Message="[&quot;Temporary folder name is replaced with email subject  &quot;]" />
                                                  <TryCatch DisplayName="Posting month and year Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                                                    <TryCatch.Try>
                                                      <Sequence DisplayName="Get posting month and year Sequence" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="x:Int64" Name="jv_Size_in_bytes" />
                                                        </Sequence.Variables>
                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_86">
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_205">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int64">[jv_Size_in_bytes]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int64">[new fileinfo(Config("Template_Path").ToString).Length]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_206">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="ui:GenericValue">[jv_Size]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="ui:GenericValue">[(convert.ToInt64(Convert.ToDouble(jv_Size_in_bytes) / 1024)).tostring]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_211">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="ui:GenericValue">[posting_Date]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="ui:GenericValue">[Config("Library_Document_Date").tostring]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_113">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[month]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(posting_Date.toString(), “dd.MM.yyyy”, Globalization.CultureInfo.InvariantCulture).ToString(“MMMM”)]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_114">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[year]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(posting_Date.toString(), “dd.MM.yyyy”, Globalization.CultureInfo.InvariantCulture).ToString(“yyyy”)]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </Sequence>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                                        <ActivityAction x:TypeArguments="s:Exception">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_89">
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_117">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[year]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">[system.DateTime.Now.Year.ToString]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_118">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[month]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">[system.DateTime.Now.ToString("MMMM")]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:Delete ContinueOnError="True" sap2010:WorkflowViewState.IdRef="Delete_15" Path="[Config(&quot;generic_Error_Screenshot_Path&quot;).ToString]" />
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_119">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[shared_Path]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[Config("Local_Path_to_Shared_Path").ToString]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_120">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[shared_DrivePath]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[shared_Path+year+"\"+month+"\"+exception.Message+"\"+"Error Log\"+mail_Subject+"-"+datetime.Now.ToString("dd_MM_yyyy-HH_mm_ss")]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Delay Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_10" />
                                                  <TryCatch DisplayName="Try Catch to move folder to shared drive" sap2010:WorkflowViewState.IdRef="TryCatch_23">
                                                    <TryCatch.Try>
                                                      <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
                                                        <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                        <InArgument x:TypeArguments="x:String">[shared_DrivePath]</InArgument>
                                                      </InvokeMethod>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_26">
                                                        <ActivityAction x:TypeArguments="s:Exception">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_99">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="ui:GenericValue" Name="mail_Subject1" />
                                                            </Sequence.Variables>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_147">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[folder_Path]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[new_Path]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_148">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[System.Text.RegularExpressions.Regex.Replace(TransactionItem.Subject,“[^a-zA-Z0-9]”, “”)]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_165">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject1]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_149">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[mail_Subject.Substring(0,20)]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_150">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[new_Path]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[folder_Path.Replace(mail_Subject1,mail_Subject)]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Move" TargetType="si:Directory">
                                                              <InArgument x:TypeArguments="x:String">[folder_Path]</InArgument>
                                                              <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                            </InvokeMethod>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_151">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[shared_Path]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[Config("Local_Path_to_Shared_Path").ToString]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_152">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[shared_DrivePath]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[shared_Path+year+"\"+month+"\"+Company_Code+"\"+"Error Log"+"\"+mail_Subject+"-"+datetime.Now.ToString("dd_MM_yyyy-HH_mm_ss")]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
                                                              <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                              <InArgument x:TypeArguments="x:String">[shared_DrivePath]</InArgument>
                                                            </InvokeMethod>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_95" Level="Info" Message="[&quot;Folder is moved to shared drive&quot;]" />
                                                  <ui:Delete ContinueOnError="True" sap2010:WorkflowViewState.IdRef="Delete_14" Path="[new_Path]" />
                                                  <Sequence DisplayName="Update Audit Log Sequence" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="s:DateTime" Name="process_End_Time" />
                                                    </Sequence.Variables>
                                                    <ui:ReadRange AddHeaders="True" DataTable="[jv_Processing_Tracker]" DisplayName="Read Audit Log" sap2010:WorkflowViewState.IdRef="ReadRange_7" SheetName="Processing_Log" WorkbookPath="[audit_Log_Path]">
                                                      <ui:ReadRange.Range>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                        </InArgument>
                                                      </ui:ReadRange.Range>
                                                    </ui:ReadRange>
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_121">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[tracker_Count]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">[jv_Processing_Tracker.Rows.Count +1]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:WriteCell Cell="[&quot;M&quot;+tracker_Count]" DisplayName="Request Status- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_41" SheetName="Processing_Log" Text="[shared_DrivePath]" WorkbookPath="[audit_Log_Path]" />
                                                    <ui:WriteCell Cell="[&quot;N&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_61" SheetName="Processing_Log" Text="[TransactionItem.Subject]" WorkbookPath="[audit_Log_Path]" />
                                                    <ui:WriteCell Cell="[&quot;O&quot;+tracker_Count]" DisplayName="Request Status- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_42" SheetName="Processing_Log" Text="[tracker_Count-1]" WorkbookPath="[audit_Log_Path]" />
                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_102" Level="Info" Message="[&quot;Processing Sl. No :- &quot;+ (tracker_Count-1)]" />
                                                    <ui:WriteCell Cell="[&quot;P&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_49" SheetName="Processing_Log" Text="[Process_Date]" WorkbookPath="[audit_Log_Path]" />
                                                    <ui:WriteCell Cell="[&quot;Q&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_50" SheetName="Processing_Log" Text="[Process_Start_Time.ToString]" WorkbookPath="[audit_Log_Path]" />
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_131">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="s:DateTime">[process_End_Time]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:WriteCell Cell="[&quot;R&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_51" SheetName="Processing_Log" Text="[datetime.Now.ToString(&quot;HH:mm:ss&quot;)]" WorkbookPath="[audit_Log_Path]" />
                                                    <ui:WriteCell Cell="[&quot;S&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_53" SheetName="Processing_Log" Text="[((process_End_Time.Subtract(Process_Start_Time_1)).ToString(&quot;hh\:mm\:ss&quot;)).ToString]" WorkbookPath="[audit_Log_Path]" />
                                                    <ui:WriteCell Cell="[&quot;T&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_74" SheetName="Processing_Log" Text="[Config(&quot;Bot_Name&quot;).ToString]" WorkbookPath="[audit_Log_Path]" />
                                                    <ui:WriteCell Cell="[&quot;U&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_75" SheetName="Processing_Log" Text="[jv_Size]" WorkbookPath="[audit_Log_Path]" />
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_200">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[mail_Size_in_KB]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">[(convert.ToInt64(Convert.ToDouble(mail_Size) / 1024)).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:WriteCell Cell="[&quot;V&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_76" SheetName="Processing_Log" Text="[mail_Size_in_KB]" WorkbookPath="[audit_Log_Path]" />
                                                    <ui:WriteCell Cell="[&quot;W&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_81" SheetName="Processing_Log" Text="NA" WorkbookPath="[audit_Log_Path]" />
                                                  </Sequence>
                                                </Sequence>
                                                <Assign DisplayName="Assign excepton to SystemError" sap2010:WorkflowViewState.IdRef="Assign_122">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                        </ActivityAction>
                                      </Catch>
                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Exception Sequence" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_99" Level="Info" Message="[exception.Message]" />
                                            <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take Screenshot" sap2010:WorkflowViewState.IdRef="TakeScreenshot_5" Screenshot="[error_screenshot]">
                                              <ui:TakeScreenshot.Target>
                                                <ui:Target Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE">
                                                  <ui:Target.ClippingRegion>
                                                    <ui:Region Rectangle="0, 0, 0, 0" />
                                                  </ui:Target.ClippingRegion>
                                                </ui:Target>
                                              </ui:TakeScreenshot.Target>
                                            </ui:TakeScreenshot>
                                            <ui:SaveImage ContinueOnError="True" DisplayName="Save Image" FileName="[Config(&quot;shared_Folder_Path_For_Attachments&quot;).ToString+transaction_Queue_Item_Mails_Data.SpecificContent(&quot;mail_Folder_Count&quot;).ToString+&quot;\&quot;+Config(&quot;error_Screenshot_Name&quot;).ToString]" sap2010:WorkflowViewState.IdRef="SaveImage_5" Image="[error_screenshot]" />
                                            <Assign DisplayName="Set transaction status to SystemError" sap2010:WorkflowViewState.IdRef="Assign_4">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="ui:GenericValue">[exception.Message.ToLower]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <TryCatch DisplayName="Try Catch if error due to excel" sap2010:WorkflowViewState.IdRef="TryCatch_29">
                                              <TryCatch.Try>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_111">
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_191">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[error_Details.Replace(".","")]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <If Condition="[error_Details.Contains(&quot;verify that the file has not been corrupted and that the file extension matches the format of the file&quot;)]" DisplayName="If - Error due to excel" sap2010:WorkflowViewState.IdRef="If_28">
                                                    <If.Then>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_184">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="ui:GenericValue">["verify that the file has not been corrupted and that the file extension matches the format of the file"]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                              </TryCatch.Try>
                                              <TryCatch.Catches>
                                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_32">
                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                    </ActivityAction.Argument>
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_187">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">["Default"]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </ActivityAction>
                                                </Catch>
                                              </TryCatch.Catches>
                                            </TryCatch>
                                            <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[error_Details]" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                              <Switch.Default>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_162">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:GenericValue">["JV was not processed due to an unexpected system error. Please check JV failed folder for more details"]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Switch.Default>
                                              <Assign x:Key="input string was not in a correct format" sap2010:WorkflowViewState.IdRef="Assign_163">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">["Please check if for empty lines in amount column posting key is set to 50"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign x:Key="the sheet does not exist" sap2010:WorkflowViewState.IdRef="Assign_164">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">["Sheet named Journal Entry is not found in JV template."]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign x:Key="verify that the file has not been corrupted and that the file extension matches the format of the file" sap2010:WorkflowViewState.IdRef="Assign_185">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">["Excel file is corrupted. Please put data into new blank JV template and resend request."]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign x:Key="object reference not set to an instance of an object" sap2010:WorkflowViewState.IdRef="Assign_192">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">["JV was not processed due to an unexpected system error. Please check JV failed folder for more details. In case of further problems please contact Bruce SMEs."]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign x:Key="cannot find the ui element corresponding to this selector" sap2010:WorkflowViewState.IdRef="Assign_193">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[error_Details]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">["JV was not processed due to an unexpected system error. Please check JV failed folder for more details. In case of further problems please contact Bruce SMEs."]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Switch>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                    <TryCatch.Finally>
                                      <TryCatch DisplayName="Set the Transaction Status and go to next Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                        <TryCatch.Try>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                              <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                                              <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                                              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transaction_Queue_Item_Mails_Data]</InArgument>
                                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </TryCatch.Finally>
                                  </TryCatch>
                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="Info" Message="[&quot;Exiting process transaction state&quot;]" />
                                </Sequence>
                              </State.Entry>
                              <State.Transitions>
                                <Transition DisplayName="Rule Exception" sap2010:WorkflowViewState.IdRef="Transition_1" To="{x:Reference __ReferenceID0}" Condition="[BusinessRuleException IsNot Nothing]" />
                                <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_5" To="{x:Reference __ReferenceID0}" Condition="[SystemError Is Nothing And BusinessRuleException is Nothing]" />
                                <Transition DisplayName="systemError" sap2010:WorkflowViewState.IdRef="Transition_9" To="{x:Reference __ReferenceID1}">
                                  <Transition.Action>
                                    <Sequence DisplayName="Exception Sequence" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_83" Level="Info" Message="[&quot;Before creation of document number error occured&quot;]" />
                                      <Assign DisplayName="Assign - Retry number" sap2010:WorkflowViewState.IdRef="Assign_31">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[System_Retry_Number]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[System_Retry_Number+1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </Transition.Action>
                                  <Transition.Condition>[SystemError isnot nothing and System_Retry_Number&lt;=convert.ToInt32(Config("MaxRetryNumber")) and JV_Document_Number=""]</Transition.Condition>
                                </Transition>
                                <Transition DisplayName="Retry3times" sap2010:WorkflowViewState.IdRef="Transition_10" To="{x:Reference __ReferenceID0}">
                                  <Transition.Action>
                                    <Sequence DisplayName="Retry 3 timesSequence" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                      <TryCatch DisplayName="Retry 3 timesTry Catch" sap2010:WorkflowViewState.IdRef="TryCatch_21">
                                        <TryCatch.Try>
                                          <Sequence DisplayName="System exception Sequence" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="list_of_sent_mails" />
                                              <Variable x:TypeArguments="snm:MailMessage" Name="sent_Mail" />
                                              <Variable x:TypeArguments="x:String" Name="business_Exception_Template" />
                                              <Variable x:TypeArguments="ui:GenericValue" Name="mail_sent" />
                                            </Sequence.Variables>
                                            <Sequence DisplayName="Getting company code from subject " sap2010:WorkflowViewState.IdRef="Sequence_48">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="ui:GenericValue" Name="closing_index" />
                                                <Variable x:TypeArguments="ui:GenericValue" Name="total_Number" />
                                              </Sequence.Variables>
                                              <Assign DisplayName="Closing index &gt; Assign" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[closing_index]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[TransactionItem.Subject.ToString.IndexOf("&gt;")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName=" position of company code Assign" sap2010:WorkflowViewState.IdRef="Assign_59">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[total_Number]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[closing_index-4]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Company code Assign" sap2010:WorkflowViewState.IdRef="Assign_60">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[company_Code]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[TransactionItem.Subject.ToString.Trim.Substring(total_Number,4)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_96" Level="Info" Message="[&quot;Move original mail to failed folder&quot;]" />
                                              <TryCatch DisplayName="Move mail to fail folder - Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_24">
                                                <TryCatch.Try>
                                                  <ui:MoveOutlookMessage Account="[Config(&quot;Account_Name&quot;).ToString]" DisplayName="Move Outlook Mail Message" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_9" MailFolder="[&quot;JV Fail\&quot;+company_Code]" MailMessage="[TransactionItem]" />
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_27">
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                            </Sequence>
                                            <ui:ReadTextFile Content="[business_Exception_Template]" DisplayName="Read Text File" FileName="[Config(&quot;templates_Path&quot;).ToString+&quot;System Exception.txt&quot;]" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
                                            <TryCatch DisplayName="Save attachment Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                                              <TryCatch.Variables>
                                                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="attachments" />
                                              </TryCatch.Variables>
                                              <TryCatch.Try>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_95">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="x:Int64" Name="jv_Size_in_bytes" />
                                                  </Sequence.Variables>
                                                  <ui:SaveMailAttachments Attachments="[attachments]" DisplayName="Save Attachments In .xlsm Format" Filter=".*(.XLSM|.xlsm)" FolderPath="[Config(&quot;shared_Folder_Path_For_Attachments&quot;).ToString+ transaction_Queue_Item_Mails_Data.SpecificContent(&quot;mail_Folder_Count&quot;).ToString+&quot;\&quot;]" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_4" Message="[TransactionItem]" />
                                                  <Assign DisplayName="Assign - Template variable" sap2010:WorkflowViewState.IdRef="Assign_140">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[template_Path_Variable]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[attachments(0)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_207">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int64">[jv_Size_in_bytes]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int64">[new fileinfo(attachments(0)).Length]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_208">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[jv_Size]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[convert.ToInt64(Convert.ToDouble(jv_Size_in_bytes) / 1024)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </TryCatch.Try>
                                              <TryCatch.Catches>
                                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                    </ActivityAction.Argument>
                                                  </ActivityAction>
                                                </Catch>
                                              </TryCatch.Catches>
                                            </TryCatch>
                                            <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                              <TryCatch.Try>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="ui:GenericValue" Name="io_Gl_Email1" />
                                                  </Sequence.Variables>
                                                  <ui:ReadRange AddHeaders="True" DataTable="[country_GL_Team_Mapping_Dt]" DisplayName="Private: Read Country and GL Team Mapping Sheet" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="Sheet1" WorkbookPath="[Config(&quot;country_GL_Team_Mapping&quot;).ToString]">
                                                    <ui:ReadRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ReadRange.Range>
                                                  </ui:ReadRange>
                                                  <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[country_GL_Team_Mapping_Dt]" DisplayName="Lookup Country and GL Team Data" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="Company Code" LookupValue="[company_Code]" TargetColumnName="Mailbox For Accounting ">
                                                    <ui:LookupDataTable.CellValue>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[io_Gl_Email1]</OutArgument>
                                                    </ui:LookupDataTable.CellValue>
                                                  </ui:LookupDataTable>
                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_97" Level="Info" Message="[&quot;Sent System Exception Mail&quot;]" />
                                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[string.Format(business_Exception_Template,error_Details,io_Gl_Email1)]" DisplayName="Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" IsBodyHtml="True" IsDraft="False" Subject="[&quot;JV System Exception : &quot;+TransactionItem.Subject]" To="[io_Gl_Email1]">
                                                    <ui:SendOutlookMail.Files>
                                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                        <InArgument x:TypeArguments="x:String">[Config("shared_Folder_Path_For_Attachments").ToString+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString+"\"+Config("error_Screenshot_Name").ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String">[template_Path_Variable]</InArgument>
                                                      </scg:List>
                                                    </ui:SendOutlookMail.Files>
                                                  </ui:SendOutlookMail>
                                                </Sequence>
                                              </TryCatch.Try>
                                              <TryCatch.Catches>
                                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                    </ActivityAction.Argument>
                                                    <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[string.Format(business_Exception_Template,error_Details,TransactionItem.Sender.Address)]" DisplayName="Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" IsBodyHtml="True" IsDraft="False" Subject="[&quot;JV System Exception : &quot;+TransactionItem.Subject]" To="[Config(&quot;sys_Exception_Notification_Maillist&quot;).ToString]">
                                                      <ui:SendOutlookMail.Files>
                                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                          <InArgument x:TypeArguments="x:String">[Config("shared_Folder_Path_For_Attachments").ToString+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString+"\"+Config("error_Screenshot_Name").ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String">[template_Path_Variable]</InArgument>
                                                        </scg:List>
                                                      </ui:SendOutlookMail.Files>
                                                    </ui:SendOutlookMail>
                                                  </ActivityAction>
                                                </Catch>
                                              </TryCatch.Catches>
                                            </TryCatch>
                                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_63" Level="Info" Message="[&quot;Mail sent to requestor&quot;]" />
                                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_64" Level="Info" Message="[&quot;Requestor email moved to JV Fail folder&quot;]" />
                                            <Delay Duration="00:00:10" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                            <TryCatch DisplayName="Move mail Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                                              <TryCatch.Try>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                  <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_2" MailFolder="Sent Items" MarkAsRead="False" Messages="[list_of_sent_mails]" OnlyUnreadMessages="False" Top="1" />
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_65">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[sent_Mail_Count]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[0]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <If Condition="[list_of_sent_mails.Count=0]" sap2010:WorkflowViewState.IdRef="If_15">
                                                    <If.Then>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                        <While sap2010:WorkflowViewState.IdRef="While_3" Condition="[sent_Mail_Count&lt;=6 and list_of_sent_mails.Count=0]">
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                            <Delay Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_5" />
                                                            <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_5" MailFolder="Sent Items" MarkAsRead="False" Messages="[list_of_sent_mails]" OnlyUnreadMessages="False" Top="1" />
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_66">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[sent_Mail_Count]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[sent_Mail_Count+1]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </Sequence>
                                                        </While>
                                                      </Sequence>
                                                    </If.Then>
                                                  </If>
                                                  <If Condition="[sent_Mail_Count=7]" sap2010:WorkflowViewState.IdRef="If_16">
                                                    <If.Then>
                                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_72" Level="Info" Message="[&quot;No mails in sent items&quot;]" />
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_67">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="snm:MailMessage">[sent_Mail]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="snm:MailMessage">[list_of_sent_mails(0)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_53">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[mail_sent]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <While sap2010:WorkflowViewState.IdRef="While_2" Condition="[mail_sent&lt;=7]">
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                            <If Condition="[sent_Mail.Subject.Contains(TransactionItem.Subject)]" sap2010:WorkflowViewState.IdRef="If_13">
                                                              <If.Then>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                                  <ui:MoveOutlookMessage Account="[Config(&quot;Account_Name&quot;).ToString]" DisplayName="Move Outlook Mail Message" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_6" MailFolder="[&quot;JV Fail\&quot;+company_Code]" MailMessage="[sent_Mail]" />
                                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_70" Level="Info" Message="[&quot;Sent mail moved to JV Fail folder&quot;]" />
                                                                  <ui:SaveMail DisplayName="Save Mail Message" FilePath="[Config(&quot;shared_Folder_Path_For_Attachments&quot;).ToString+transaction_Queue_Item_Mails_Data.SpecificContent(&quot;mail_Folder_Count&quot;).ToString+&quot;\&quot;+&quot;SentMail.eml&quot;]" sap2010:WorkflowViewState.IdRef="SaveMail_3" MailMessage="[sent_Mail]" />
                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[mail_sent]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="ui:GenericValue">[8]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                                  <Delay Duration="00:00:10" sap2010:WorkflowViewState.IdRef="Delay_4" />
                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[mail_sent]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="ui:GenericValue">[mail_sent+1]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_4" MailFolder="Sent Items" MarkAsRead="False" Messages="[list_of_sent_mails]" OnlyUnreadMessages="False" Top="1" />
                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="snm:MailMessage">[sent_Mail]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="snm:MailMessage">[list_of_sent_mails(0)]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If Condition="[mail_sent=7]" sap2010:WorkflowViewState.IdRef="If_14">
                                                              <If.Then>
                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_71" Level="Info" Message="[&quot;Sent mail not found in sent items&quot;]" />
                                                              </If.Then>
                                                            </If>
                                                          </Sequence>
                                                        </While>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </TryCatch.Try>
                                              <TryCatch.Catches>
                                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                    </ActivityAction.Argument>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_78" Level="Info" Message="[&quot;Outlook not responding&quot;]" />
                                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_79" Level="Info" Message="[exception]" />
                                                    </Sequence>
                                                  </ActivityAction>
                                                </Catch>
                                              </TryCatch.Catches>
                                            </TryCatch>
                                            <Sequence DisplayName="move folder to shared drive" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="ui:GenericValue" Name="folder_Path" />
                                                <Variable x:TypeArguments="ui:GenericValue" Name="new_Path" />
                                                <Variable x:TypeArguments="ui:GenericValue" Name="shared_DrivePath" />
                                                <Variable x:TypeArguments="x:String" Name="year" />
                                                <Variable x:TypeArguments="x:String" Name="month" />
                                                <Variable x:TypeArguments="ui:GenericValue" Name="shared_Path" />
                                                <Variable x:TypeArguments="ui:GenericValue" Name="mail_Subject" />
                                                <Variable x:TypeArguments="ui:GenericValue" Name="posting_Date" />
                                              </Sequence.Variables>
                                              <ui:SaveMail DisplayName="Save Mail Message" FilePath="[Config(&quot;shared_Folder_Path_For_Attachments&quot;).ToString+transaction_Queue_Item_Mails_Data.SpecificContent(&quot;mail_Folder_Count&quot;).ToString+&quot;\&quot;+&quot;Mail.eml&quot;]" sap2010:WorkflowViewState.IdRef="SaveMail_5" MailMessage="[TransactionItem]" />
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_210">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int64">[mail_Size]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int64">[new fileinfo(Config("shared_Folder_Path_For_Attachments").ToString+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString+"\"+"Mail.eml").Length]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[folder_Path]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[Config("shared_Folder_Path_For_Attachments").ToString+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString+"\"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[System.Text.RegularExpressions.Regex.Replace(TransactionItem.Subject,“[^a-zA-Z0-9]”, “”)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[new_Path]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[folder_Path.Replace("Mails_"+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString,mail_Subject+"-"+datetime.Now.ToString("dd_MM_yyyy-HH_mm_ss"))]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_28">
                                                <TryCatch.Try>
                                                  <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Move" TargetType="si:Directory">
                                                    <InArgument x:TypeArguments="x:String">[folder_Path]</InArgument>
                                                    <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                  </InvokeMethod>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_31">
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_109">
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_179">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[System.Text.RegularExpressions.Regex.Replace(TransactionItem.Subject,“[^a-zA-Z0-9]”, “”)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_180">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[mail_Subject.Substring(0,20)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_181">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[new_Path]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[folder_Path.Replace("Mails_"+transaction_Queue_Item_Mails_Data.SpecificContent("mail_Folder_Count").ToString,mail_Subject+"-"+datetime.Now.ToString("dd_MM_yyyy-HH_mm_ss"))]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="Move" TargetType="si:Directory">
                                                          <InArgument x:TypeArguments="x:String">[folder_Path]</InArgument>
                                                          <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                        </InvokeMethod>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_66" Level="Info" Message="[&quot;Temparory folder name is replaced with email subject name&quot;]" />
                                              <TryCatch DisplayName="Posting month and year Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                                                <TryCatch.Try>
                                                  <Sequence DisplayName="Get posting month and year Sequence" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="attachments" />
                                                    </Sequence.Variables>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_112">
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_212">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="ui:GenericValue">[posting_Date]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="ui:GenericValue">[Config("Library_Document_Date").tostring]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_213">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[month]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(posting_Date.toString(), “dd.MM.yyyy”, Globalization.CultureInfo.InvariantCulture).ToString(“MMMM”)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_214">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[year]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(posting_Date.toString(), “dd.MM.yyyy”, Globalization.CultureInfo.InvariantCulture).ToString(“yyyy”)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </Sequence>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_73">
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_93">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[year]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[system.DateTime.Now.Year.ToString]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_94">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[month]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[system.DateTime.Now.ToString("MMMM")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[shared_Path]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[Config("Local_Path_to_Shared_Path").ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[shared_DrivePath]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[shared_Path+year+"\"+month+"\"+Company_Code+"\"+"Error Log"+"\"+mail_Subject+"-"+datetime.Now.ToString("dd_MM_yyyy-HH_mm_ss")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_22">
                                                <TryCatch.Try>
                                                  <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
                                                    <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                    <InArgument x:TypeArguments="x:String">[shared_DrivePath]</InArgument>
                                                  </InvokeMethod>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_104">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="ui:GenericValue" Name="mail_Subject1" />
                                                        </Sequence.Variables>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_167">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[folder_Path]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[new_Path]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_168">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[System.Text.RegularExpressions.Regex.Replace(TransactionItem.Subject,“[^a-zA-Z0-9]”, “”)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_169">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject1]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_170">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[mail_Subject]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[mail_Subject.Substring(0,20)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_171">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[new_Path]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[folder_Path.Replace(mail_Subject1,mail_Subject)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Move" TargetType="si:Directory">
                                                          <InArgument x:TypeArguments="x:String">[folder_Path]</InArgument>
                                                          <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                        </InvokeMethod>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_172">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[shared_Path]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[Config("Local_Path_to_Shared_Path").ToString]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_173">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[shared_DrivePath]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[shared_Path+year+"\"+month+"\"+Company_Code+"\"+"Error Log"+"\"+mail_Subject+"-"+datetime.Now.ToString("dd_MM_yyyy-HH_mm_ss")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="CopyDirectory" TargetType="mvf:FileSystem">
                                                          <InArgument x:TypeArguments="x:String">[new_Path]</InArgument>
                                                          <InArgument x:TypeArguments="x:String">[shared_DrivePath]</InArgument>
                                                        </InvokeMethod>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_67" Level="Info" Message="[&quot;Folder moved to shared drive&quot;]" />
                                              <ui:Delete ContinueOnError="True" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[new_Path]" />
                                              <Sequence DisplayName="Exception sequence" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="sd:DataTable" Name="jv_Processing_Tracker" />
                                                  <Variable x:TypeArguments="ui:GenericValue" Name="tracker_Count" />
                                                  <Variable x:TypeArguments="ui:Image" Name="login_Error_Screenshot" />
                                                  <Variable x:TypeArguments="ui:GenericValue" Name="error_Message" />
                                                  <Variable x:TypeArguments="x:String" Name="system_exception_Template" />
                                                  <Variable x:TypeArguments="s:DateTime" Name="process_End_Time" />
                                                </Sequence.Variables>
                                                <ui:ReadRange AddHeaders="True" DataTable="[jv_Processing_Tracker]" DisplayName="Read JV processing tracker" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Processing_Log" WorkbookPath="[audit_Log_Path]">
                                                  <ui:ReadRange.Range>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                    </InArgument>
                                                  </ui:ReadRange.Range>
                                                </ui:ReadRange>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_61">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:GenericValue">[tracker_Count]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:GenericValue">[jv_Processing_Tracker.Rows.Count +2]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:WriteCell Cell="[&quot;A&quot;+tracker_Count]" DisplayName="Document number- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_14" SheetName="Processing_Log" Text="NA" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;B&quot;+tracker_Count]" DisplayName="Document Type- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_15" SheetName="Processing_Log" Text="[document_Type]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;C&quot;+tracker_Count]" DisplayName="Document Date- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_16" SheetName="Processing_Log" Text="[document_Date]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;D&quot;+tracker_Count]" DisplayName="Currency Key- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_17" SheetName="Processing_Log" Text="[currency_Key]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;E&quot;+tracker_Count]" DisplayName="Posting Date- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_18" SheetName="Processing_Log" Text="[document_Date]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;F&quot;+tracker_Count]" DisplayName="Requester Email- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_19" SheetName="Processing_Log" Text="[sender_Email]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;G&quot;+tracker_Count]" DisplayName="Approver Email- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_20" SheetName="Processing_Log" Text="[cc_Emails]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;H&quot;+tracker_Count]" DisplayName="Company Code- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_21" SheetName="Processing_Log" Text="[company_Code]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;I&quot;+tracker_Count]" DisplayName="Document Header Text- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_22" SheetName="Processing_Log" Text="[doc_header_Text]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;J&quot;+tracker_Count]" DisplayName="Request Status- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_23" SheetName="Processing_Log" Text="Failed" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;K&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_24" SheetName="Processing_Log" Text="System exception" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;L&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_25" SheetName="Processing_Log" Text="[country_Code]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;M&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_28" SheetName="Processing_Log" Text="[shared_DrivePath]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;N&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_62" SheetName="Processing_Log" Text="[TransactionItem.Subject]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;O&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_29" SheetName="Processing_Log" Text="[tracker_Count-1]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_103" Level="Info" Message="[&quot;Processing Sl. No :- &quot;+ (tracker_Count-1)]" />
                                                <ui:WriteCell Cell="[&quot;P&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_55" SheetName="Processing_Log" Text="[Process_Date]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;Q&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_56" SheetName="Processing_Log" Text="[Process_Start_Time.ToString]" WorkbookPath="[audit_Log_Path]" />
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_132">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:DateTime">[process_End_Time]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:WriteCell Cell="[&quot;R&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_57" SheetName="Processing_Log" Text="[datetime.Now.ToString(&quot;HH:mm:ss&quot;)]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;S&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_59" SheetName="Processing_Log" Text="[((process_End_Time.Subtract(Process_Start_Time_1)).ToString(&quot;hh\:mm\:ss&quot;)).ToString]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;T&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_77" SheetName="Processing_Log" Text="[Config(&quot;Bot_Name&quot;).ToString]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;U&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_78" SheetName="Processing_Log" Text="[jv_Size]" WorkbookPath="[audit_Log_Path]" />
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_202">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:GenericValue">[mail_Size_in_KB]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:GenericValue">[(convert.ToInt64(Convert.ToDouble(mail_Size) / 1024)).ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:WriteCell Cell="[&quot;V&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_79" SheetName="Processing_Log" Text="[mail_Size_in_KB]" WorkbookPath="[audit_Log_Path]" />
                                                <ui:WriteCell Cell="[&quot;W&quot;+tracker_Count]" DisplayName="Reason Of Failure- Write Cell" sap2010:WorkflowViewState.IdRef="WriteCell_80" SheetName="Processing_Log" Text="NA" WorkbookPath="[audit_Log_Path]" />
                                              </Sequence>
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_63">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[TransactionNumber]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[TransactionNumber+1]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_64">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="s:Exception">[nothing]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_103">
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_157">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[TransactionNumber]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[TransactionNumber+1]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_158">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:Exception">[nothing]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </Transition.Action>
                                  <Transition.Condition>[SystemError isnot nothing and System_Retry_Number&gt;=convert.ToInt16(Config("MaxRetryNumber"))]</Transition.Condition>
                                </Transition>
                              </State.Transitions>
                              <State.Variables>
                                <Variable x:TypeArguments="x:String" Name="company_Code" />
                                <Variable x:TypeArguments="x:String" Name="currency_Key" />
                                <Variable x:TypeArguments="x:String" Name="function_Name" />
                                <Variable x:TypeArguments="x:String" Name="windows_Name" />
                                <Variable x:TypeArguments="x:String" Name="document_Date" />
                                <Variable x:TypeArguments="x:String" Name="number_Of_Records" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="error_Details" />
                                <Variable x:TypeArguments="x:String" Name="to_Address" />
                                <Variable x:TypeArguments="sd:DataTable" Name="country_GL_Team_Mapping_Dt" />
                              </State.Variables>
                            </State>
                          </Transition.To>
                          <Transition.Action>
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+TransactionNumber.ToString]" />
                          </Transition.Action>
                          <Transition.Condition>[TransactionItem IsNot Nothing and Mail_Not_Found=1]</Transition.Condition>
                        </Transition>
                        <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_7">
                          <Transition.To>
                            <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                              <State.Entry>
                                <Sequence DisplayName="End Sequence" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="ui:GenericValue" Name="Count" />
                                  </Sequence.Variables>
                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="[&quot;Entered End Process state&quot;]" />
                                  <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                    <TryCatch.Try>
                                      <Sequence DisplayName="End of process activities" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="ui:GenericValue" Name="sharePoint_Process_Name" />
                                        </Sequence.Variables>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="JEPP_SharePoint_Process_Name" DisplayName="Get Asset - sharePoint_Process_Name" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
                                          <ui:GetRobotAsset.Value>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[sharePoint_Process_Name]</OutArgument>
                                          </ui:GetRobotAsset.Value>
                                        </ui:GetRobotAsset>
                                        <ui:StartJob TimeoutMS="{x:Null}" DisplayName="Start Job" sap2010:WorkflowViewState.IdRef="StartJob_1" NumberOfRobots="1" ProcessName="[sharePoint_Process_Name]" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="[&quot;Exiting End Process state&quot;]" />
                                </Sequence>
                              </State.Entry>
                              <State.Variables>
                                <Variable x:TypeArguments="ui:GenericValue" Name="audit_Log_Path_1" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="shard_AuditLog" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="repalced_AuditLog_Name" />
                              </State.Variables>
                            </State>
                          </Transition.To>
                          <Transition.Action>
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
                          </Transition.Action>
                          <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Increment Transaction number if mail not found" sap2010:WorkflowViewState.IdRef="Transition_11" To="{x:Reference __ReferenceID0}">
                          <Transition.Action>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_139">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[TransactionNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[TransactionNumber+1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Transition.Action>
                          <Transition.Condition>[Mail_Not_Found=0]</Transition.Condition>
                        </Transition>
                      </State.Transitions>
                      <State.Variables>
                        <Variable x:TypeArguments="ui:GenericValue" Name="Mail_Not_Found" />
                      </State.Variables>
                    </State>
                  </Transition.To>
                  <Transition.Action>
                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="Retrt initialization State" />
                  </Transition.Action>
                  <Transition.Condition>[SystemError is Nothing]</Transition.Condition>
                </Transition>
                <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_3" To="{x:Reference __ReferenceID2}">
                  <Transition.Action>
                    <Sequence DisplayName="Exception sequence" sap2010:WorkflowViewState.IdRef="Sequence_77">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="jv_Processing_Tracker" />
                        <Variable x:TypeArguments="ui:GenericValue" Name="tracker_Count" />
                        <Variable x:TypeArguments="ui:Image" Name="login_Error_Screenshot" />
                        <Variable x:TypeArguments="ui:GenericValue" Name="error_Message" />
                        <Variable x:TypeArguments="x:String" Name="system_exception_Template" />
                      </Sequence.Variables>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_85" Level="Fatal" Message="[&quot;System error at initialization: &quot; + SystemError.Message + &quot; at Source: &quot; + SystemError.Source]" />
                    </Sequence>
                  </Transition.Action>
                  <Transition.Condition>[SystemError isNot Nothing and RetryNumber&gt;= Convert.ToInt32(Config("MaxRetryNumber"))]</Transition.Condition>
                </Transition>
                <Transition DisplayName="Retry" sap2010:WorkflowViewState.IdRef="Transition_8" To="{x:Reference __ReferenceID3}">
                  <Transition.Action>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_98">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[RetryNumber]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[RetryNumber+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Transition.Action>
                  <Transition.Condition>[SystemError isnot nothing and RetryNumber&lt; Convert.ToInt32(Config("MaxRetryNumber"))]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </StateMachine.InitialState>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <StateMachine.Variables>
            <Variable x:TypeArguments="snm:MailMessage" Name="TransactionItem" />
            <Variable x:TypeArguments="s:Exception" Name="SystemError" />
            <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
            <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
            <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
            <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
            <Variable x:TypeArguments="x:String" Name="TransactionField2" />
            <Variable x:TypeArguments="x:String" Name="TransactionField1" />
            <Variable x:TypeArguments="x:String" Name="TransactionID" />
            <Variable x:TypeArguments="sd:DataTable" Name="TransactionData" />
            <Variable x:TypeArguments="x:String" Name="sap_Document_Date" />
            <Variable x:TypeArguments="ui:GenericValue" Name="sent_Mail_Count" />
            <Variable x:TypeArguments="ui:GenericValue" Name="jv_Size" />
          </StateMachine.Variables>
        </StateMachine>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_15">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_80" Level="Info" Message="[exception]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <sads:DebugSymbol.Symbol></sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="675,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="LogMessage_29" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="314,112" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="581,260">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="314,123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_1" sap:VirtualizedContainerService.HintSize="314,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,787">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_4" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="675,935">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_136" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="LogMessage_31" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="675,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_32" sap:VirtualizedContainerService.HintSize="675,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_33" sap:VirtualizedContainerService.HintSize="675,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_35" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="675,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_34" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="697,2295">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_84" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="701,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="715,2989">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="643,60" />
      <sap2010:ViewStateData Id="LogMessage_37" sap:VirtualizedContainerService.HintSize="643,91" />
      <sap2010:ViewStateData Id="ShouldStop_1" sap:VirtualizedContainerService.HintSize="643,22" />
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_126" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_127" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_128" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogMessage_40" sap:VirtualizedContainerService.HintSize="242,51" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_13" sap:VirtualizedContainerService.HintSize="242,51" />
      <sap2010:ViewStateData Id="LogMessage_39" sap:VirtualizedContainerService.HintSize="242,51" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="264,657">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="418,988">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="643,1136">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_38" sap:VirtualizedContainerService.HintSize="643,51" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="665,1716">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_44" sap:VirtualizedContainerService.HintSize="1064,91" />
      <sap2010:ViewStateData Id="Assign_99" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_100" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_95" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_70" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_71" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_72" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_73" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_74" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_75" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_76" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_77" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_195" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_196" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Delete_6" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="1064,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_86" sap:VirtualizedContainerService.HintSize="1064,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_21" sap:VirtualizedContainerService.HintSize="1064,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_46" sap:VirtualizedContainerService.HintSize="1064,91" />
      <sap2010:ViewStateData Id="LogMessage_47" sap:VirtualizedContainerService.HintSize="1064,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="1064,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_48" sap:VirtualizedContainerService.HintSize="1064,91" />
      <sap2010:ViewStateData Id="LogMessage_49" sap:VirtualizedContainerService.HintSize="1064,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_24" sap:VirtualizedContainerService.HintSize="1064,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_50" sap:VirtualizedContainerService.HintSize="1064,91" />
      <sap2010:ViewStateData Id="Assign_133" sap:VirtualizedContainerService.HintSize="1024,60" />
      <sap2010:ViewStateData Id="LogMessage_51" sap:VirtualizedContainerService.HintSize="1024,91" />
      <sap2010:ViewStateData Id="Assign_154" sap:VirtualizedContainerService.HintSize="1024,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_52" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_53" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_25" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_54" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_55" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_26" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_56" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_155" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_100" sap:VirtualizedContainerService.HintSize="336,1220">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_11" sap:VirtualizedContainerService.HintSize="512,22" />
      <sap2010:ViewStateData Id="Assign_153" sap:VirtualizedContainerService.HintSize="512,60" />
      <sap2010:ViewStateData Id="Delay_12" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_156" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_26" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_102" sap:VirtualizedContainerService.HintSize="486,494">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_7" sap:VirtualizedContainerService.HintSize="512,652">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_101" sap:VirtualizedContainerService.HintSize="534,1220">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Parallel_3" sap:VirtualizedContainerService.HintSize="1024,1266">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_57" sap:VirtualizedContainerService.HintSize="1024,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_27" sap:VirtualizedContainerService.HintSize="336,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_8" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_129" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteCell_48" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_43" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_44" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_130" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteCell_45" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_47" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_70" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_71" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_198" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteCell_72" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_73" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_94" sap:VirtualizedContainerService.HintSize="336,1906">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_106" sap:VirtualizedContainerService.HintSize="358,2157">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_101" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_107" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_29" sap:VirtualizedContainerService.HintSize="404,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_26" sap:VirtualizedContainerService.HintSize="1024,2813">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_75" sap:VirtualizedContainerService.HintSize="1046,4705">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_82" sap:VirtualizedContainerService.HintSize="563,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_98" sap:VirtualizedContainerService.HintSize="563,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_78" sap:VirtualizedContainerService.HintSize="563,60" />
      <sap2010:ViewStateData Id="Assign_79" sap:VirtualizedContainerService.HintSize="563,60" />
      <sap2010:ViewStateData Id="TakeScreenshot_6" sap:VirtualizedContainerService.HintSize="563,68" />
      <sap2010:ViewStateData Id="SaveImage_6" sap:VirtualizedContainerService.HintSize="563,92" />
      <sap2010:ViewStateData Id="Assign_159" sap:VirtualizedContainerService.HintSize="563,60" />
      <sap2010:ViewStateData Id="Assign_188" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_182" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_27" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_110" sap:VirtualizedContainerService.HintSize="486,432">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_186" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_33" sap:VirtualizedContainerService.HintSize="490,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_30" sap:VirtualizedContainerService.HintSize="563,871">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_80" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_160" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_161" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_175" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_183" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_189" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_190" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Switch`1_1" sap:VirtualizedContainerService.HintSize="563,988">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="585,2825">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="1050,2894">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_21" sap:VirtualizedContainerService.HintSize="1050,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="1064,8014">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_58" sap:VirtualizedContainerService.HintSize="1064,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="1086,9658">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_101" sap:VirtualizedContainerService.HintSize="440,60" />
      <sap2010:ViewStateData Id="LogMessage_87" sap:VirtualizedContainerService.HintSize="440,91" />
      <sap2010:ViewStateData Id="Assign_102" sap:VirtualizedContainerService.HintSize="440,60" />
      <sap2010:ViewStateData Id="Assign_166" sap:VirtualizedContainerService.HintSize="440,60" />
      <sap2010:ViewStateData Id="MoveOutlookMessage_7" sap:VirtualizedContainerService.HintSize="440,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_88" sap:VirtualizedContainerService.HintSize="440,91" />
      <sap2010:ViewStateData Id="Delay_7" sap:VirtualizedContainerService.HintSize="440,22" />
      <sap2010:ViewStateData Id="GetOutlookMailMessages_7" sap:VirtualizedContainerService.HintSize="242,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_103" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Delay_8" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="GetOutlookMailMessages_8" sap:VirtualizedContainerService.HintSize="242,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_104" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_5" sap:VirtualizedContainerService.HintSize="464,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_89" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_105" sap:VirtualizedContainerService.HintSize="673,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_106" sap:VirtualizedContainerService.HintSize="673,60" />
      <sap2010:ViewStateData Id="MoveOutlookMessage_8" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_90" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="SaveMail_6" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_107" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="336,569">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_9" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_108" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="GetOutlookMailMessages_9" sap:VirtualizedContainerService.HintSize="242,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_109" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_80" sap:VirtualizedContainerService.HintSize="264,408">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_22" sap:VirtualizedContainerService.HintSize="625,717">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_91" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_23" sap:VirtualizedContainerService.HintSize="625,239">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_81" sap:VirtualizedContainerService.HintSize="647,1120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_6" sap:VirtualizedContainerService.HintSize="673,1278">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_82" sap:VirtualizedContainerService.HintSize="695,1602">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="264,428">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_92" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_93" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="336,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_18" sap:VirtualizedContainerService.HintSize="404,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_17" sap:VirtualizedContainerService.HintSize="440,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveMail_7" sap:VirtualizedContainerService.HintSize="418,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_209" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="Assign_110" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="Assign_111" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="Assign_112" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="InvokeMethod_5" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Assign_176" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_177" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_178" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeMethod_14" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Sequence_108" sap:VirtualizedContainerService.HintSize="264,556">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_30" sap:VirtualizedContainerService.HintSize="404,625">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_27" sap:VirtualizedContainerService.HintSize="418,1067">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_94" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="Assign_205" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_206" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_211" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_113" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_114" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_86" sap:VirtualizedContainerService.HintSize="264,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="286,708">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_117" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_118" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Delete_15" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_89" sap:VirtualizedContainerService.HintSize="264,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_19" sap:VirtualizedContainerService.HintSize="404,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_18" sap:VirtualizedContainerService.HintSize="418,1433">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_119" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="Assign_120" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="Delay_10" sap:VirtualizedContainerService.HintSize="418,22" />
      <sap2010:ViewStateData Id="InvokeMethod_6" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Assign_147" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_148" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_165" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_149" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_150" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeMethod_10" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Assign_151" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_152" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeMethod_11" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Sequence_99" sap:VirtualizedContainerService.HintSize="264,1128">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_26" sap:VirtualizedContainerService.HintSize="404,1197">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_23" sap:VirtualizedContainerService.HintSize="418,1639">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_95" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="Delete_14" sap:VirtualizedContainerService.HintSize="418,22" />
      <sap2010:ViewStateData Id="ReadRange_7" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_121" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteCell_41" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_61" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_42" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_102" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="WriteCell_49" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_50" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="Assign_131" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteCell_51" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_53" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_74" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_75" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_200" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteCell_76" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_81" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_90" sap:VirtualizedContainerService.HintSize="418,2347">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="440,7843">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_122" sap:VirtualizedContainerService.HintSize="440,60" />
      <sap2010:ViewStateData Id="Sequence_92" sap:VirtualizedContainerService.HintSize="462,8909">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_23" sap:VirtualizedContainerService.HintSize="466,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_20" sap:VirtualizedContainerService.HintSize="480,9323">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="1090,9392">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_99" sap:VirtualizedContainerService.HintSize="504,91" />
      <sap2010:ViewStateData Id="TakeScreenshot_5" sap:VirtualizedContainerService.HintSize="504,68" />
      <sap2010:ViewStateData Id="SaveImage_5" sap:VirtualizedContainerService.HintSize="504,92" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="504,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="504,60" />
      <sap2010:ViewStateData Id="Assign_191" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_184" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_28" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_111" sap:VirtualizedContainerService.HintSize="486,432">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_187" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_32" sap:VirtualizedContainerService.HintSize="490,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_29" sap:VirtualizedContainerService.HintSize="504,871">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_162" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_163" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_164" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_185" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_192" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_193" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Switch`1_2" sap:VirtualizedContainerService.HintSize="504,325">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="526,1931">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="532,2000">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_24" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="404,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="418,557">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="1104,21858">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_43" sap:VirtualizedContainerService.HintSize="546,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="1126,22113">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_1" sap:VirtualizedContainerService.HintSize="430,507">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">390.05,828 390.05,840.6 535.5,840.6 535.5,210.6 505.5,210.6</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_5" sap:VirtualizedContainerService.HintSize="430,549">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">428.25,828 428.25,849.4 535.5,849.4 535.5,249.4 505.5,249.4</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_83" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_28" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_29" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="336,569">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_9" sap:VirtualizedContainerService.HintSize="783,964">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">370.95,828 370.95,858 304.1,858 304.1,828</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">7</x:Int32>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="LogMessage_96" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="MoveOutlookMessage_9" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_27" sap:VirtualizedContainerService.HintSize="404,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_24" sap:VirtualizedContainerService.HintSize="418,501">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="1467,1056">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadTextFile_2" sap:VirtualizedContainerService.HintSize="1467,59" />
      <sap2010:ViewStateData Id="SaveMailAttachments_4" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_140" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_207" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_208" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_95" sap:VirtualizedContainerService.HintSize="336,511">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_22" sap:VirtualizedContainerService.HintSize="404,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_19" sap:VirtualizedContainerService.HintSize="1467,925" />
      <sap2010:ViewStateData Id="ReadRange_4" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupDataTable_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="LogMessage_97" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="SendOutlookMail_2" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="336,589">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOutlookMail_4" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="404,214">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="1467,1113">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_63" sap:VirtualizedContainerService.HintSize="1467,91" />
      <sap2010:ViewStateData Id="LogMessage_64" sap:VirtualizedContainerService.HintSize="1467,91" />
      <sap2010:ViewStateData Id="Delay_2" sap:VirtualizedContainerService.HintSize="1467,22" />
      <sap2010:ViewStateData Id="GetOutlookMailMessages_2" sap:VirtualizedContainerService.HintSize="1034,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_65" sap:VirtualizedContainerService.HintSize="1034,60" />
      <sap2010:ViewStateData Id="Delay_5" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="GetOutlookMailMessages_5" sap:VirtualizedContainerService.HintSize="242,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_3" sap:VirtualizedContainerService.HintSize="464,466" />
      <sap2010:ViewStateData Id="Sequence_51" sap:VirtualizedContainerService.HintSize="486,590">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="1034,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_72" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_67" sap:VirtualizedContainerService.HintSize="673,60" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="673,60" />
      <sap2010:ViewStateData Id="MoveOutlookMessage_6" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_70" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="SaveMail_3" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="336,569">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="GetOutlookMailMessages_4" sap:VirtualizedContainerService.HintSize="242,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_46" sap:VirtualizedContainerService.HintSize="264,408">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="625,717">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_71" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="625,239" />
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="647,1120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="673,1278">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="695,1602">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="1034,1750">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_62" sap:VirtualizedContainerService.HintSize="1056,2814">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_78" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_79" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_63" sap:VirtualizedContainerService.HintSize="336,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_14" sap:VirtualizedContainerService.HintSize="1060,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_13" sap:VirtualizedContainerService.HintSize="1467,3539">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveMail_5" sap:VirtualizedContainerService.HintSize="1445,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_210" sap:VirtualizedContainerService.HintSize="1445,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="1445,60" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="1445,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="1445,60" />
      <sap2010:ViewStateData Id="InvokeMethod_3" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Assign_179" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_180" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_181" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeMethod_15" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Sequence_109" sap:VirtualizedContainerService.HintSize="264,556">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_31" sap:VirtualizedContainerService.HintSize="404,625">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_28" sap:VirtualizedContainerService.HintSize="1445,1067" />
      <sap2010:ViewStateData Id="LogMessage_66" sap:VirtualizedContainerService.HintSize="1445,91" />
      <sap2010:ViewStateData Id="Assign_212" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_213" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_214" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_112" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="286,508">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_93" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_94" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_73" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_17" sap:VirtualizedContainerService.HintSize="404,353">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_16" sap:VirtualizedContainerService.HintSize="1445,1171">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="1445,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="1445,60" />
      <sap2010:ViewStateData Id="InvokeMethod_7" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="Assign_167" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_168" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_169" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_170" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_171" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeMethod_12" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Assign_172" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_173" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeMethod_13" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Sequence_104" sap:VirtualizedContainerService.HintSize="264,1128">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_25" sap:VirtualizedContainerService.HintSize="404,1197">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_22" sap:VirtualizedContainerService.HintSize="1445,1639">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_67" sap:VirtualizedContainerService.HintSize="1445,91" />
      <sap2010:ViewStateData Id="Delete_2" sap:VirtualizedContainerService.HintSize="1445,22" />
      <sap2010:ViewStateData Id="ReadRange_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteCell_14" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_15" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_16" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_17" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_18" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_19" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_20" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_21" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_22" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_23" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_24" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_25" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_28" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_62" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_29" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_103" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="WriteCell_55" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_56" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="Assign_132" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteCell_57" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="WriteCell_59" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_77" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_78" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_202" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteCell_79" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_80" sap:VirtualizedContainerService.HintSize="314,115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="1445,4207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_31" sap:VirtualizedContainerService.HintSize="1445,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_32" sap:VirtualizedContainerService.HintSize="1445,87" />
      <sap2010:ViewStateData Id="Assign_63" sap:VirtualizedContainerService.HintSize="1445,60" />
      <sap2010:ViewStateData Id="Assign_64" sap:VirtualizedContainerService.HintSize="1445,60" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="1467,9833">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="1489,17173">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_36" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_37" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_157" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_158" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_103" sap:VirtualizedContainerService.HintSize="336,538">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_24" sap:VirtualizedContainerService.HintSize="1493,607">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_21" sap:VirtualizedContainerService.HintSize="1507,18090">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="1529,18214">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_10" sap:VirtualizedContainerService.HintSize="1612,18609">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">476,660.7 493.95,660.7 493.95,278.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">48</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">75</x:Int32>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_3" sap:VirtualizedContainerService.HintSize="1152,22748">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">285,350</av:Point>
            <av:Size x:Key="ShapeSize">191,478</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">177</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_22" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_6" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">390,278.5 390,308.5 380.5,308.5 380.5,350</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_35" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="GetRobotAsset_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="StartJob_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,335">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="404,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="418,1056">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_36" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="440,1442">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="124,103">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">73,188.5</av:Point>
            <av:Size x:Key="ShapeSize">124,103</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">110</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="430,853">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">390,278.5 390,308.5 135,308.5 135,291.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_139" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Transition_11" sap:VirtualizedContainerService.HintSize="430,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">436.2,278.5 436.2,308.5 470.85,308.5 470.85,278.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">55</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">67</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_4" sap:VirtualizedContainerService.HintSize="231,97">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,181.5</av:Point>
            <av:Size x:Key="ShapeSize">231,97</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">217</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="Transition_2" sap:VirtualizedContainerService.HintSize="579,1093">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <av:PointCollection x:Key="ConnectorLocation">391.5,111.5 391.5,141.5 390,141.5 390,181.5</av:PointCollection>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_85" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_3" sap:VirtualizedContainerService.HintSize="579,1192">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">391.5,111.5 391.5,141.5 128.8,141.5 128.8,188.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_98" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Transition_8" sap:VirtualizedContainerService.HintSize="579,3810">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">391.5,111.5 391.5,141.5 379.8,141.5 379.8,111.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">35</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="234,103">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,8.5</av:Point>
            <av:Size x:Key="ShapeSize">234,103</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="779,1151">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">70,12.5</av:Point>
            <x:Double x:Key="StateContainerWidth">765</x:Double>
            <x:Double x:Key="StateContainerHeight">1088</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">130,50 160,50 160,49.7 274.5,49.7</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_80" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_15" sap:VirtualizedContainerService.HintSize="783,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_14" sap:VirtualizedContainerService.HintSize="797,1621">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="819,1745">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main2_1" sap:VirtualizedContainerService.HintSize="859,1865">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>